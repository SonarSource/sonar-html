<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonarsource.html</groupId>
    <artifactId>html</artifactId>
    <version>3.20.0-SNAPSHOT</version>
  </parent>

  <artifactId>sonar-html-plugin</artifactId>
  <packaging>sonar-plugin</packaging>

  <name>SonarQube HTML Plugin :: Sonar Plugin</name>
  <description>Code analyzer for HTML</description>
  <url>http://redirect.sonarsource.com/plugins/web.html</url>

  <scm>
    <connection>scm:git:git@github.com:SonarSource/sonar-html.git</connection>
    <developerConnection>scm:git:git@github.com:SonarSource/sonar-html.git</developerConnection>
    <url>https://github.com/SonarSource/sonar-html</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <sonar.pluginName>HTML Code Quality and Security</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.html.HtmlPlugin</sonar.pluginClass>
    <sonar.skipDependenciesPackaging>true</sonar.skipDependenciesPackaging>
    <sonar.sonarLintSupported>true</sonar.sonarLintSupported>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.sonarsource.api.plugin</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.plugin.api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sslr</groupId>
      <artifactId>sslr-core</artifactId>
      <version>${sslr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.analyzer-commons</groupId>
      <artifactId>sonar-analyzer-commons</artifactId>
      <version>${analyzerCommons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.analyzer-commons</groupId>
      <artifactId>sonar-analyzer-recognizers</artifactId>
      <version>${analyzerCommons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.10.2</version>
    </dependency>

    <!-- JSF Expression parser -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.el</artifactId>
      <version>${jakarta.el.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-plugin-api-impl</artifactId>
      <version>${sonarqube.api.impl.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
        <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonarqube.api.impl.version}</version>
      <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
    </dependency>
        <dependency>
      <groupId>org.sonarsource.sslr</groupId>
      <artifactId>sslr-testing-harness</artifactId>
      <version>${sslr.version}</version>
      <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
    </dependency>

     <dependency>
        <groupId>org.sonarsource.api.plugin</groupId>
        <artifactId>sonar-plugin-api-test-fixtures</artifactId>
        <version>${sonar.plugin.api.version}</version>
        <scope>test</scope>
      </dependency>

  </dependencies>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>false</shadedArtifactAttached>
              <minimizeJar>true</minimizeJar>
              <createDependencyReducedPom>false</createDependencyReducedPom>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <configuration>
          <!-- SonarHTML replaces SonarWeb but we keep the plugin key "web" to make it easier for users to migrate -->
          <pluginKey>web</pluginKey>
          <jreMinVersion>${jdk.min.version}</jreMinVersion>
          <!-- this value is translated to Sonar-Version property in META-INF/MANIFEST.MF file inside jar. It is used at runtime
          by products to detect compatibility. We keep LTS -->
          <pluginApiMinVersion>9.9</pluginApiMinVersion>
          <requiredForLanguages>web,jsp,js,php</requiredForLanguages>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-plugin-size</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <rules>
                <requireFilesSize>
                  <minsize>1000000</minsize>
                  <maxsize>2000000</maxsize>
                  <files>
                    <file>${project.build.directory}/${project.build.finalName}.jar</file>
                  </files>
                </requireFilesSize>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>license-regeneration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>2.7.0</version>
            <configuration>
              <errorRemedy>failFast</errorRemedy>
              <writeVersions>false</writeVersions>
              <socketTimeout>20000</socketTimeout>
              <licensesOutputDirectory>${project.basedir}/src/main/resources/licenses/THIRD_PARTY_LICENSES</licensesOutputDirectory>
              <licensesOutputFile>${project.build.directory}/licenses.xml</licensesOutputFile>
              <organizeLicensesByDependencies>true</organizeLicensesByDependencies>
              <licenseUrlReplacements>
                <licenseUrlReplacement>
                  <regexp>https://www.gnu.org/software/classpath/license.html</regexp>
                  <replacement>file://${basedir}/src/main/license-resources/GNU-general-public-license-version2-w-classpath-exception.txt</replacement>
                </licenseUrlReplacement>
                <licenseUrlReplacement>
                  <regexp>https://asm.ow2.io/license.html</regexp>
                  <replacement>file://${basedir}/src/main/license-resources/asm-ow2-bsd.txt</replacement>
                </licenseUrlReplacement>
                  <licenseUrlReplacement>
                      <regexp>http://www.gnu.org/licenses/gpl.txt</regexp>
                      <replacement>file://${basedir}/src/main/license-resources/gpl_v2.txt</replacement>
                  </licenseUrlReplacement>
                  <licenseUrlReplacement>
                      <regexp>http://www.gnu.org/licenses/lgpl.txt</regexp>
                      <replacement>file://${basedir}/src/main/license-resources/lgpl_v3.txt</replacement>
                  </licenseUrlReplacement>
              </licenseUrlReplacements>
              <licenseUrlFileNameSanitizers>
                <LicenseUrlReplacement>
                    <regexp>_.*\.txt</regexp>
                </LicenseUrlReplacement>
                  <!--                 Append -LICENSE.txt -->
                  <LicenseUrlReplacement>
                      <regexp>$</regexp>
                      <replacement>-LICENSE.txt</replacement>
                </LicenseUrlReplacement>
              </licenseUrlFileNameSanitizers>
            </configuration>
            <executions>
              <execution>
                <id>download-licenses</id>
                <goals>
                  <goal>download-licenses</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>copy-main-license</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>..</directory>
                      <includes>
                        <include>LICENSE.txt</include>
                      </includes>
                    </resource>
                  </resources>
                  <outputDirectory>src/main/resources/licenses</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>check-license-files</id>
                <phase>verify</phase>
                <configuration>
                  <target>
                    <fileset id="invalid.files" dir="${project.basedir}/src/main/resources/licenses">
                      <exclude name="**/*.txt"/>
                      <include name="**/*"/>
                    </fileset>
                    <condition property="has.invalid.files">
                      <resourcecount refid="invalid.files" when="greater" count="0"/>
                    </condition>
                    <fail message="There are files in ${project.basedir}/src/main/resources/licenses that do not end with .txt">
                      <condition>
                        <isset property="has.invalid.files"/>
                      </condition>
                    </fail>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
